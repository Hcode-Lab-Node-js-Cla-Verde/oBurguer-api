generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model migrations {
  id        Int    @id @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar(255)
}

model Person {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(250)
  createdAt DateTime  @default(now()) @db.DateTime(0)
  updatedAt DateTime? @default(now()) @db.DateTime(0)
  addresses Address[] @relation("addressesTopersons")
  users     User[]

  @@map("persons")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique(map: "UQ_97672ac88f789774dd47f7c8be3") @db.VarChar(120)
  password  String    @db.VarChar(255)
  photo     String?   @db.VarChar(255)
  personId  Int
  createdAt DateTime  @default(now()) @db.DateTime(0)
  updatedAt DateTime? @default(now()) @db.DateTime(0)
  persons   Person    @relation(fields: [personId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_users_persons")

  @@index([personId], map: "FK_users_persons")
  @@map("users")
}

model Address {
  id         Int       @id @default(autoincrement())
  street     String    @db.VarChar(250)
  number     String    @db.VarChar(16)
  complement String    @db.VarChar(250)
  district   String    @db.VarChar(250)
  city       String    @db.VarChar(250)
  state      String    @db.VarChar(250)
  country    String    @db.VarChar(250)
  zipcode    String    @db.VarChar(8)
  personId   Int
  createdAt  DateTime  @default(now()) @db.DateTime(0)
  updatedAt  DateTime? @default(now()) @db.DateTime(0)
  persons    Person    @relation("addressesTopersons", fields: [personId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_addresses_persons")

  @@index([personId], map: "FK_addresses_persons")
  @@map("addresses")
}

model ingredient_types {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(250)
  ingredients ingredients[]
}

model ingredients {
  id               Int              @id @default(autoincrement())
  name             String           @db.VarChar(250)
  price            Decimal          @default(0.00) @db.Decimal(10, 2)
  type_id          Int
  available        Int              @db.TinyInt
  createdAt        DateTime         @default(now()) @db.DateTime(0)
  updatedAt        DateTime         @default(now()) @db.DateTime(0)
  ingredient_types ingredient_types @relation(fields: [type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ingredients_ingredients_types")

  @@index([type_id], map: "FK_ingredients_ingredients_types")
}

model item_ingredients {
  id               Int      @id @default(autoincrement())
  ingredient_price Decimal  @default(0.00) @db.Decimal(10, 2)
  createdAt        DateTime @default(now()) @db.DateTime(0)
  updatedAt        DateTime @default(now()) @db.DateTime(0)
}
